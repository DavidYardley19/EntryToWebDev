body {
    background: #f5f6f7;
    color: #1b1b32;
    font-family: Helvetica;
    margin: 0;
  }
  
  header {
    width: 100%;
    height: 50px;
    background-color: #1b1b32;
    display: flex;
    
    /* Put space betw children, vertically centre them, fix header to top of viewport */
    justify-content: space-between;
    align-items: center;
    position: fixed;
    top: 0;
    /* Note: top is used to tweak an element with use of positional property... margin-top is for measuring external distance to the element in relation to the previous one */
  }

/* Useful property of SVG - scalable vector graphics - is that it contains a path attribute : : allows image to be scaled without affecting resolution of resultant image... how... */
#logo {
    /* The 18vw indicates 18% of the viewport width */
    width: max(100px, 18vw);
    /* We could have used img selector, but we allocated a unique id to this img that we want to play with, so this selector is also for a unique case. */

    /* Logo should retain aspect ratio of 35 / 4 ... and have padding around the text */
    background-color: #0a0a23;
    aspect-ratio: 35/4;
    padding: 0.4rem;
}

h1 {
  color: #f1be32;
  font-size: min(5vw, 1.2em);
  /* When the screen width is small, h1 doesnt wrap text content how it should, align to centre */
  text-align: center;
}

main {
  /* Adding some space above since the "student info" title is not showing */
  padding-top: 25px;
}

/* CHILD COMBINATOR SELECTOR >
  used betw selectors to target only elements that match second selector... and are a direct child of the first selector
  Controls the scope of styling
*/

nav > ul {
  /* evenly space the children */
  display: flex;
  justify-content: space-evenly;
  /* On small screens, ul in nav bar overflows to rhs > Can fix with flex display > wrap ul content then set list of css properties */
  flex-wrap: wrap;
  align-items: center;
  padding-inline-start: 0;
  margin-block: 0;
  height: 100%;
  }

/* select list elements in nav bar - give styles */
nav > ul > li {
  /* you can also just use: nav li */
  color: #dfdfe2;
  margin: 0 0.2rem;
  padding: 0.2rem;
  display: block;
}

/* visual accessability: contrast between elements is key: example... between text and background of heading should be 4.5:1 at least */
li > a {
  color: inherit;
  /* remove the underlines from the anchor tags */
  text-decoration: none;
}

nav li:hover {
  color: #1b1b32;
  background-color: #dfdfe2;
  cursor: pointer;
}

/* set width of section elements to 80pc of parent container >> Margin to centre the section elements >> 10px to bottom margin >> Ensure section cant be larger than 600px width*/
section {
  width: 80%;
  max-width: 600px;
  margin: 0 auto 10px auto;
}

/* typeface :: important in accessibility, some fonts are easier to read than others - especially on low res screens */
h1, h2 {
  font-family: Verdana, sans-serif;
}

h2 {
  border-bottom: 4px solid #dfdfe2;
  /* replace top margin */
  margin-top: 0;
  padding-top: 60px;
}

/* add top and left padding to .info class > all other = 0 vals */
.info {
  padding: 10px 0 0 5px;
}

/* .formrow class: top margin, L+R padding, all other 0 vals ... then increase font size for all input elements */
.formrow {
  margin-top: 30px;
  padding: 0 15px;
}

input {
  font-size: 16px;
}

/* 
  Align input boxes with each other: create ruleset that targets all inputs labels within an info element and set displau to inline block... also align label elements to right
*/

.info input, .info label {
  display: inline-block;
}

/* Make the first section look more inline >> Target only input elements within the .info class ... set width to 50pc and left align text */
.info input {
  width: 50%;
  text-align: left;
}

/* target labels within info elements:: set width to 10pc... min of 55px */
.info label {
  width: 10%;
  min-width: 55px;
  text-align: right;
}

/* neat up .question-block: */
.question-block {
  text-align: left;
  display: block;
  width: 100%;
  margin-top: 20px;
  padding-top: 5px;
}

/* make p elems appear as higher priority: */
p {
  margin-top: 5px;
  padding-left: 15px;
  font-size: 20px;
}

p::before {
  /* This is to prevent unnecessary repetition */
  content: "Question #";
}

/* useful to see default browser around fieldset elems during development ... but it may not be the style you want.. rm border and bottom padding on question elems */
.question {
  /* remember to use none, not 0 */
  border: none;
  padding-bottom: 0;
}

.sr-only {
  /* Making sure the text is invisible */
  /* There is a specific pattern of css lines for this */
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* upo to step 61 */

